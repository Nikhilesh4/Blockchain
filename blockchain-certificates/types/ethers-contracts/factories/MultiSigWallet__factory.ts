/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, BigNumberish, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../common.js"
  import type { MultiSigWallet, MultiSigWalletInterface } from "../MultiSigWallet.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "address[]",
        "name": "_owners",
        "type": "address[]"
      },
      {
        "internalType": "uint256",
        "name": "_numConfirmationsRequired",
        "type": "uint256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "owner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "txIndex",
        "type": "uint256"
      }
    ],
    "name": "ConfirmTransaction",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "sender",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "balance",
        "type": "uint256"
      }
    ],
    "name": "Deposit",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "owner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "txIndex",
        "type": "uint256"
      }
    ],
    "name": "ExecuteTransaction",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "owner",
        "type": "address"
      }
    ],
    "name": "OwnerAdded",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "owner",
        "type": "address"
      }
    ],
    "name": "OwnerRemoved",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "required",
        "type": "uint256"
      }
    ],
    "name": "RequirementChanged",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "owner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "txIndex",
        "type": "uint256"
      }
    ],
    "name": "RevokeConfirmation",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "owner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "txIndex",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "bytes",
        "name": "data",
        "type": "bytes"
      }
    ],
    "name": "SubmitTransaction",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_txIndex",
        "type": "uint256"
      }
    ],
    "name": "confirmTransaction",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_txIndex",
        "type": "uint256"
      }
    ],
    "name": "executeTransaction",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getOwners",
    "outputs": [
      {
        "internalType": "address[]",
        "name": "",
        "type": "address[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getPendingTransactionCount",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_txIndex",
        "type": "uint256"
      }
    ],
    "name": "getTransaction",
    "outputs": [
      {
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      },
      {
        "internalType": "bytes",
        "name": "data",
        "type": "bytes"
      },
      {
        "internalType": "bool",
        "name": "executed",
        "type": "bool"
      },
      {
        "internalType": "uint256",
        "name": "numConfirmations",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "submittedAt",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getTransactionCount",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "isConfirmed",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "isOwner",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_txIndex",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "_owner",
        "type": "address"
      }
    ],
    "name": "isTransactionConfirmed",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "numConfirmationsRequired",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "owners",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_txIndex",
        "type": "uint256"
      }
    ],
    "name": "revokeConfirmation",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_to",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "_value",
        "type": "uint256"
      },
      {
        "internalType": "bytes",
        "name": "_data",
        "type": "bytes"
      }
    ],
    "name": "submitAndConfirmTransaction",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_to",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "_value",
        "type": "uint256"
      },
      {
        "internalType": "bytes",
        "name": "_data",
        "type": "bytes"
      }
    ],
    "name": "submitTransaction",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "transactions",
    "outputs": [
      {
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      },
      {
        "internalType": "bytes",
        "name": "data",
        "type": "bytes"
      },
      {
        "internalType": "bool",
        "name": "executed",
        "type": "bool"
      },
      {
        "internalType": "uint256",
        "name": "numConfirmations",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "submittedAt",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "stateMutability": "payable",
    "type": "receive"
  }
] as const;

  const _bytecode = "0x608060405234801561000f575f5ffd5b506040516115f83803806115f883398101604081905261002e916102b5565b5f8251116100755760405162461bcd60e51b815260206004820152600f60248201526e13dddb995c9cc81c995c5d5a5c9959608a1b60448201526064015b60405180910390fd5b5f81118015610085575081518111155b6100e25760405162461bcd60e51b815260206004820152602860248201527f496e76616c6964206e756d626572206f6620726571756972656420636f6e6669604482015267726d6174696f6e7360c01b606482015260840161006c565b5f5b8251811015610246575f83828151811061010057610100610389565b602002602001015190505f6001600160a01b0316816001600160a01b03160361015b5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21037bbb732b960991b604482015260640161006c565b6001600160a01b0381165f9081526001602052604090205460ff16156101b65760405162461bcd60e51b815260206004820152601060248201526f4f776e6572206e6f7420756e6971756560801b604482015260640161006c565b6001600160a01b0381165f818152600160208190526040808320805460ff191683179055825491820183558280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390910180546001600160a01b03191684179055517f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c39190a2506001016100e4565b5060028190556040518181527facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da9060200160405180910390a1505061039d565b634e487b7160e01b5f52604160045260245ffd5b80516001600160a01b03811681146102b0575f5ffd5b919050565b5f5f604083850312156102c6575f5ffd5b82516001600160401b038111156102db575f5ffd5b8301601f810185136102eb575f5ffd5b80516001600160401b0381111561030457610304610286565b604051600582901b90603f8201601f191681016001600160401b038111828210171561033257610332610286565b60405291825260208184018101929081018884111561034f575f5ffd5b6020850194505b83851015610375576103678561029a565b815260209485019401610356565b506020969096015195979596505050505050565b634e487b7160e01b5f52603260045260245ffd5b61124e806103aa5f395ff3fe6080604052600436106100e7575f3560e01c80639ace38c211610087578063d0549b8511610057578063d0549b85146102f0578063ddbd5d3f14610305578063e4d8e85c14610319578063ee22610b14610338575f5ffd5b80639ace38c214610272578063a0e67e2b14610291578063c01a8c84146102b2578063c6427474146102d1575f5ffd5b80632e7700f0116100c25780632e7700f0146101b65780632f54bf6e146101ca57806333ea3dc81461020857806380f59a6514610239575f5ffd5b8063025e7c271461012c57806317b7f7321461016857806320ea8d8614610195575f5ffd5b36610128576040805134815247602082015233917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a2005b5f5ffd5b348015610137575f5ffd5b5061014b610146366004610d46565b610357565b6040516001600160a01b0390911681526020015b60405180910390f35b348015610173575f5ffd5b50610187610182366004610d8c565b61037e565b60405190815260200161015f565b3480156101a0575f5ffd5b506101b46101af366004610d46565b6103d4565b005b3480156101c1575f5ffd5b50600454610187565b3480156101d5575f5ffd5b506101f86101e4366004610e58565b60016020525f908152604090205460ff1681565b604051901515815260200161015f565b348015610213575f5ffd5b50610227610222366004610d46565b61055c565b60405161015f96959493929190610ea6565b348015610244575f5ffd5b506101f8610253366004610eea565b600360209081525f928352604080842090915290825290205460ff1681565b34801561027d575f5ffd5b5061022761028c366004610d46565b610659565b34801561029c575f5ffd5b506102a5610736565b60405161015f9190610f14565b3480156102bd575f5ffd5b506101b46102cc366004610d46565b610795565b3480156102dc575f5ffd5b506101876102eb366004610d8c565b610924565b3480156102fb575f5ffd5b5061018760025481565b348015610310575f5ffd5b50610187610ab4565b348015610324575f5ffd5b506101f8610333366004610eea565b610b0b565b348015610343575f5ffd5b506101b4610352366004610d46565b610b37565b5f8181548110610365575f80fd5b5f918252602090912001546001600160a01b0316905081565b335f9081526001602052604081205460ff166103b55760405162461bcd60e51b81526004016103ac90610f5f565b60405180910390fd5b5f6103c1858585610924565b90506103cc81610795565b949350505050565b335f9081526001602052604090205460ff166104025760405162461bcd60e51b81526004016103ac90610f5f565b600454819081106104255760405162461bcd60e51b81526004016103ac90610f82565b816004818154811061043957610439610fb9565b5f91825260209091206003600690920201015460ff161561046c5760405162461bcd60e51b81526004016103ac90610fcd565b5f83815260036020908152604080832033845290915290205460ff166104d45760405162461bcd60e51b815260206004820152601960248201527f5472616e73616374696f6e206e6f7420636f6e6669726d65640000000000000060448201526064016103ac565b5f600484815481106104e8576104e8610fb9565b905f5260205f20906006020190506001816004015f82825461050a9190611018565b90915550505f848152600360209081526040808320338085529252808320805460ff191690555186927ff0dca620e2e81f7841d07bcc105e1704fb01475b278a9d4c236e1c62945edd5591a350505050565b5f5f60605f5f5f5f6004888154811061057757610577610fb9565b5f9182526020909120600690910201805460018201546003830154600484015460058501546002860180549697506001600160a01b039095169593949360ff9093169284906105c59061102b565b80601f01602080910402602001604051908101604052809291908181526020018280546105f19061102b565b801561063c5780601f106106135761010080835404028352916020019161063c565b820191905f5260205f20905b81548152906001019060200180831161061f57829003601f168201915b505050505093509650965096509650965096505091939550919395565b60048181548110610668575f80fd5b5f9182526020909120600690910201805460018201546002830180546001600160a01b03909316945090929161069d9061102b565b80601f01602080910402602001604051908101604052809291908181526020018280546106c99061102b565b80156107145780601f106106eb57610100808354040283529160200191610714565b820191905f5260205f20905b8154815290600101906020018083116106f757829003601f168201915b5050505060038301546004840154600590940154929360ff9091169290915086565b60605f80548060200260200160405190810160405280929190818152602001828054801561078b57602002820191905f5260205f20905b81546001600160a01b0316815260019091019060200180831161076d575b5050505050905090565b335f9081526001602052604090205460ff166107c35760405162461bcd60e51b81526004016103ac90610f5f565b600454819081106107e65760405162461bcd60e51b81526004016103ac90610f82565b81600481815481106107fa576107fa610fb9565b5f91825260209091206003600690920201015460ff161561082d5760405162461bcd60e51b81526004016103ac90610fcd565b5f838152600360209081526040808320338452909152902054839060ff16156108985760405162461bcd60e51b815260206004820152601d60248201527f5472616e73616374696f6e20616c726561647920636f6e6669726d656400000060448201526064016103ac565b5f600485815481106108ac576108ac610fb9565b905f5260205f20906006020190506001816004015f8282546108ce919061105d565b90915550505f858152600360209081526040808320338085529252808320805460ff191660011790555187927f5cbe105e36805f7820e291f799d5794ff948af2a5f664e580382defb6339004191a35050505050565b335f9081526001602052604081205460ff166109525760405162461bcd60e51b81526004016103ac90610f5f565b600480546040805160c0810182526001600160a01b038881168252602082018881529282018781525f60608401819052608084018190524260a08501526001860187559590955281517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6006860290810180546001600160a01b0319169290931691909117825592517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c84015593519293909290917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d0190610a3490826110bc565b50606082015160038201805460ff19169115159190911790556080820151600482015560a0909101516005909101556040516001600160a01b03861690829033907fd5a05bf70715ad82a09a756320284a1b54c9ff74cd0f8cce6219e79b563fe59d90610aa49089908990611177565b60405180910390a4949350505050565b5f80805b600454811015610b055760048181548110610ad557610ad5610fb9565b5f91825260209091206003600690920201015460ff16610afd5781610af98161118f565b9250505b600101610ab8565b50919050565b5f8281526003602090815260408083206001600160a01b038516845290915290205460ff165b92915050565b335f9081526001602052604090205460ff16610b655760405162461bcd60e51b81526004016103ac90610f5f565b60045481908110610b885760405162461bcd60e51b81526004016103ac90610f82565b8160048181548110610b9c57610b9c610fb9565b5f91825260209091206003600690920201015460ff1615610bcf5760405162461bcd60e51b81526004016103ac90610fcd565b5f60048481548110610be357610be3610fb9565b905f5260205f209060060201905060025481600401541015610c585760405162461bcd60e51b815260206004820152602860248201527f43616e6e6f7420657865637574653a206e65656473206d6f726520636f6e6669604482015267726d6174696f6e7360c01b60648201526084016103ac565b60038101805460ff191660019081179091558154908201546040515f926001600160a01b03169190610c8e9060028601906111a7565b5f6040518083038185875af1925050503d805f8114610cc8576040519150601f19603f3d011682016040523d82523d5f602084013e610ccd565b606091505b5050905080610d135760405162461bcd60e51b8152602060048201526012602482015271151c985b9cd858dd1a5bdb8819985a5b195960721b60448201526064016103ac565b604051859033907f5445f318f4f5fcfb66592e68e0cc5822aa15664039bd5f0ffde24c5a8142b1ac905f90a35050505050565b5f60208284031215610d56575f5ffd5b5035919050565b80356001600160a01b0381168114610d73575f5ffd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f5f5f60608486031215610d9e575f5ffd5b610da784610d5d565b925060208401359150604084013567ffffffffffffffff811115610dc9575f5ffd5b8401601f81018613610dd9575f5ffd5b803567ffffffffffffffff811115610df357610df3610d78565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610e2257610e22610d78565b604052818152828201602001881015610e39575f5ffd5b816020840160208301375f602083830101528093505050509250925092565b5f60208284031215610e68575f5ffd5b610e7182610d5d565b9392505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b60018060a01b038716815285602082015260c060408201525f610ecc60c0830187610e78565b941515606083015250608081019290925260a0909101529392505050565b5f5f60408385031215610efb575f5ffd5b82359150610f0b60208401610d5d565b90509250929050565b602080825282518282018190525f918401906040840190835b81811015610f545783516001600160a01b0316835260209384019390920191600101610f2d565b509095945050505050565b6020808252600990820152682737ba1037bbb732b960b91b604082015260600190565b6020808252601a908201527f5472616e73616374696f6e20646f6573206e6f74206578697374000000000000604082015260600190565b634e487b7160e01b5f52603260045260245ffd5b6020808252601c908201527f5472616e73616374696f6e20616c726561647920657865637574656400000000604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b81810381811115610b3157610b31611004565b600181811c9082168061103f57607f821691505b602082108103610b0557634e487b7160e01b5f52602260045260245ffd5b80820180821115610b3157610b31611004565b601f8211156110b757805f5260205f20601f840160051c810160208510156110955750805b601f840160051c820191505b818110156110b4575f81556001016110a1565b50505b505050565b815167ffffffffffffffff8111156110d6576110d6610d78565b6110ea816110e4845461102b565b84611070565b6020601f82116001811461111c575f83156111055750848201515b5f19600385901b1c1916600184901b1784556110b4565b5f84815260208120601f198516915b8281101561114b578785015182556020948501946001909201910161112b565b508482101561116857868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b828152604060208201525f6103cc6040830184610e78565b5f600182016111a0576111a0611004565b5060010190565b5f5f83546111b48161102b565b6001821680156111cb57600181146111e05761120d565b60ff198316865281151582028601935061120d565b865f5260205f205f5b83811015611205578154888201526001909101906020016111e9565b505081860193505b50919594505050505056fea264697066735822122007591ec4e158695b1fc42127718d3b5655fb439e6e05fdb9317a326723dae17164736f6c634300081c0033";

  
      type MultiSigWalletConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: MultiSigWalletConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class MultiSigWallet__factory extends ContractFactory {
    
      constructor(...args: MultiSigWalletConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(_owners: AddressLike[], _numConfirmationsRequired: BigNumberish, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(_owners, _numConfirmationsRequired, overrides || {});
    };
    override deploy(_owners: AddressLike[], _numConfirmationsRequired: BigNumberish, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(_owners, _numConfirmationsRequired, overrides || {}) as Promise<MultiSigWallet & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): MultiSigWallet__factory {
      return super.connect(runner) as MultiSigWallet__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): MultiSigWalletInterface {
      return new Interface(_abi) as MultiSigWalletInterface;
    }
    
    override attach(address: string | Addressable): MultiSigWallet {
      return super.attach(address) as MultiSigWallet;
    }
  static connect(address: string, runner?: ContractRunner | null): MultiSigWallet {
      return new Contract(address, _abi, runner) as unknown as MultiSigWallet;
    }
  }

  
  